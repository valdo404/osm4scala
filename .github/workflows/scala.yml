name: Scala CI & Release

on:
  push:
    branches: [ '*' ] # Trigger on all branches
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
  pull_request:
    branches: [ master ] # Keep PR trigger for master
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for sbt-dynver to access Git history
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Setup sbt
      uses: coursier/setup-action@v1
      with:
        apps: sbt
    - name: Run tests
      run: sbt +test

  publish-snapshot:
    name: Publish Snapshot
    needs: test # Run after tests pass
    if: github.ref_type == 'branch' && github.ref_name != 'master' # Only run on non-master branches
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Permission to write to GitHub Packages
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for sbt-dynver
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Setup sbt
      uses: coursier/setup-action@v1
      with:
        apps: sbt
    - name: Publish Snapshot to GitHub Packages
      run: sbt +publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use the default GitHub token for Packages auth

  publish-release:
    name: Publish Release
    needs: test # Run after tests pass
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permission to create release
      packages: write # Permission to write to GitHub Packages
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for sbt-dynver
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    - name: Setup sbt
      uses: coursier/setup-action@v1
      with:
        apps: sbt
    - name: Extract version from tag
      id: extract_version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    - name: Publish Release Artifacts to GitHub Packages
      run: sbt +publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ env.RELEASE_VERSION }}
        body: "Release notes for version ${{ env.RELEASE_VERSION }}" # You might want to generate this dynamically later
        draft: false
        prerelease: false
        # files: | # Optional: Upload assets directly to release (if not using Packages primarily)
        #   target/scala-*/core_*.jar
        #   target/scala-*/osm4scala-assembly-*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
